version: 2
jobs:
  build:
    working_directory: /usr/src/apidocs
    docker:
      - image: python:3.9.9
    steps:
      - checkout
      - run:
          name: Install slicer-apidocs-builder
          command: |
            pip install git+https://github.com/Slicer/slicer-apidocs-builder
      - run:
          name: Set GitHub status to 'pending'
          command: |
            slicer-apidocs-builder \
              --status-update-state pending \
              --status-update-repo-name Slicer/Slicer \
              --status-update-revision ${SLICER_REPO_REVISION} \
              --status-update-target-url ${CIRCLE_BUILD_URL}

      - run:
          name: Display Environment Variables
          command: |
            echo "SLICER_REPO_NAME .............: ${SLICER_REPO_NAME}"
            echo "SLICER_REPO_REVISION .........: ${SLICER_REPO_REVISION}"
            echo "SLICER_REPO_BRANCH ...........: ${SLICER_REPO_BRANCH}"
            echo "SLICER_REPO_TAG: .............: ${SLICER_REPO_TAG}"
            echo "SLICER_REPO_PR_NUMBER ........: ${SLICER_REPO_PR_NUMBER}"
            PUBLISH_GITHUB_PROJECT_NAME=$([[ "${SLICER_REPO_PR_NUMBER}" == "" ]] && echo "apidocs.slicer.org" || echo "preview.apidocs.slicer.org")
            echo "PUBLISH_GITHUB_PROJECT_NAME ..: ${PUBLISH_GITHUB_PROJECT_NAME}"
      - run:
          name: Install Doxygen
          command: |
            (
              apt-get update
              apt-get install -y --no-install-recommends graphviz
              .circleci/install-doxygen.sh
            ) \
            ||
            (
              slicer-apidocs-builder \
                --status-update-state failure \
                --status-update-repo-name Slicer/Slicer \
                --status-update-revision ${SLICER_REPO_REVISION} \
                --status-update-target-url ${CIRCLE_BUILD_URL}
              exit 1
            )
      - run:
          name: Generate Documentation
          command: |
            (
              slicer-apidocs-builder \
                --skip-publish \
                --slicer-repo-name ${SLICER_REPO_NAME} \
                --slicer-repo-branch "${SLICER_REPO_BRANCH}" \
                --slicer-repo-tag "${SLICER_REPO_TAG}"
            ) \
            ||
            (
              slicer-apidocs-builder \
                --status-update-state failure \
                --status-update-repo-name Slicer/Slicer \
                --status-update-revision ${SLICER_REPO_REVISION} \
                --status-update-target-url ${CIRCLE_BUILD_URL}
              exit 1
            )
      - run:
          name: Publish documentation
          command: |
            PUBLISH_GITHUB_PROJECT_NAME=$([[ "${SLICER_REPO_PR_NUMBER}" == "" ]] && echo "apidocs.slicer.org" || echo "preview.apidocs.slicer.org")
            (
              slicer-apidocs-builder \
                --skip-build \
                --slicer-repo-name ${SLICER_REPO_NAME} \
                --slicer-repo-branch "${SLICER_REPO_BRANCH}" \
                --slicer-repo-tag "${SLICER_REPO_TAG}" \
                --publish-github-repo-name "Slicer/${PUBLISH_GITHUB_PROJECT_NAME}" \
                --publish-github-repo-branch gh-pages
            ) \
            ||
            (
              slicer-apidocs-builder \
                --status-update-state failure \
                --status-update-repo-name Slicer/Slicer \
                --status-update-revision ${SLICER_REPO_REVISION} \
                --status-update-target-url ${CIRCLE_BUILD_URL}
              exit 1
            )
      - run:
          name: Set GitHub status to 'success'
          command: |
            PUBLISH_GITHUB_PROJECT_NAME=$([[ "${SLICER_REPO_PR_NUMBER}" == "" ]] && echo "apidocs.slicer.org" || echo "preview.apidocs.slicer.org")
            slicer-apidocs-builder \
              --status-update-state success \
              --status-update-repo-name Slicer/Slicer \
              --status-update-revision ${SLICER_REPO_REVISION} \
              --slicer-repo-branch "${SLICER_REPO_BRANCH}" \
              --slicer-repo-tag "${SLICER_REPO_TAG}" \
              --status-update-target-url "https://slicer.github.com/${PUBLISH_GITHUB_PROJECT_NAME}"

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            branches:
              only: master

